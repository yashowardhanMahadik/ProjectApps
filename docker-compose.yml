services:
  loadbalancer:
    build:
      context: nginx
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    networks:
      - my-network
    depends_on:
      - reddit1
      - reddit2

  zookeeper:
    image: wurstmeister/zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    networks:
      - my-network
  kafka:
    image: wurstmeister/kafka:latest
    restart: "no"
    links:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://:29092,EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    networks:
      - my-network
  
  like-app:
    container_name: like-app
    build:
      context: likeApp
      dockerfile: Dockerfile
    ports:
      - "9191:8080"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    networks:
      - my-network
    depends_on:
      - kafka
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      # JVM_OPTS: "-Xms16M -Xmx512M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    ports:
      - 9000:9000
    depends_on:
      - kafka
    networks:
      - my-network

  reddit1:
    container_name: reddit1-app
    build:
      context: reddit1/reddit1
      dockerfile: Dockerfile
    ports:
      - "8080" # let the docker assign this port
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.data.mongodb.uri":"mongodb://mongoServer/red3",
        "server.port":"8080"
        }'
    networks:
      - my-network
    depends_on:
      - mongoServer
  reddit2:
    container_name: reddit2-app
    build:
      context: reddit2/reddit2
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.data.mongodb.uri":"mongodb://mongoServer/red3"
        }'
    networks:
      - my-network
    depends_on:
      - mongoServer

  mongoServer:
    image: mongo:latest
    ports:
      - "27070:27017"
    networks:
      - my-network
    volumes:
      - mongo-data:/data/db

networks:
  my-network:
     driver: bridge
volumes:
  mongo-data: